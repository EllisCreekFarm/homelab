---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.6.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      blocky:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.25@sha256:347f8c6addc1775ef74b83dfc609c28436a67f812ef0ee7e2602569dc0e56cd1
            env:
              TZ: "${CLUSTER_TZ}"
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
                add: ["NET_BIND_SERVICE"]
            resources:
              requests:
                cpu: 50m
                memory: 32Mi
              limits:
                cpu: 500m
                memory: 128Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command: ["/app/blocky", "healthcheck", "--port", "8053"]
                  initialDelaySeconds: 10
                  timeoutSeconds: 5
                  periodSeconds: 10
                  failureThreshold: 10
              readiness: *probes
    service:
      blocky:
        controller: blocky
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: "192.168.2.81"
        ports:
          http:
            port: 8080
            protocol: HTTP
          dns:
            port: &dns_port 53
            targetPort: &dns_target_port 8053
            protocol: UDP
            appProtocol: dns
          dns-tcp:
            port: *dns_port
            targetPort: *dns_target_port
            protocol: TCP
            appProtocol: dns
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile: {type: RuntimeDefault}
    persistence:
      config-file:
        type: configMap
        name: blocky-configmap
        advancedMounts:
          blocky:
            main:
              - path: /app/config.yml
                subPath: config.yaml
                readOnly: true
    serviceMonitor:
      blocky:
        serviceName: blocky
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
