---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      authelia:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.18@sha256:a5e6fa4b1dbdc296f80f9175157b145a0598690ec8cd4d6e105cd4498fe0c731
            env:
              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:80
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: dark
              X_AUTHELIA_CONFIG: /config/configuration.yaml
              X_AUTHELIA_CONFIG_FILTERS: template
              CLOUDFLARE_SUBDOMAIN: "${CLOUDFLARE_SUBDOMAIN}"
              CLOUDFLARE_DOMAIN: "${CLOUDFLARE_DOMAIN}"
              CLUSTER_DISPLAY_NAME: "${CLUSTER_DISPLAY_NAME}"
            envFrom:
              - secretRef:
                  name: authelia-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
          litestream: &lightstream
            image:
              repository: "docker.io/litestream/litestream"
              tag: "0.3.13"
              pullPolicy: "IfNotPresent"
            args: ["replicate"]
            envFrom:
              - secretRef:
                  name: authelia-litestream-secret
        initContainers:
          litestream-restore-database:
            <<: *lightstream
            args: ["restore", "-if-db-not-exists", "-if-replica-exists", "/data/db.sqlite3"]
          assets-sync:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            env:
              GITSYNC_REPO: "${CLUSTER_GIT_REPO_URL}"
              GITSYNC_REF: "${CLUSTER_GIT_REPO_BRANCH}"
              GITSYNC_ROOT: /data/git
              GITSYNC_ONE_TIME: true
            envFrom:
              - secretRef:
                  name: authelia-git-sync-secret
          assets-copy:
            dependsOn: assets-sync
            image:
              repository: public.ecr.aws/docker/library/busybox
              tag: 1.37.0-musl@sha256:37ccc05112d0a7162b605c375f5c0f5cfbc6e6c4fc8030ead6ae26a18c28a542
            command: ["/bin/sh", "-c", "cp -v -r /data/git/homelab/kubernetes/service/core/authentication/authelia/app/assets/. /assets/"]
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile: {type: RuntimeDefault}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    service:
      app:
        controller: authelia
        ports:
          http:
            port: *port
          metrics:
            port: 8080
    serviceMonitor:
      app:
        serviceName: authelia
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${CLOUDFLARE_DOMAIN}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: "${CLOUDFLARE_SUBDOMAIN:-${APP}}.${CLOUDFLARE_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        type: configMap
        name: authelia-configmap
        advancedMounts:
          authelia:
            app:
              - path: /config/configuration.yaml
                subPath: configuration.yaml
                readOnly: true
            litestream: &litestream-config
              - path: "/etc/litestream.yml"
                subPath: "litestream.yml"
                readOnly: true
            litestream-restore-database: *litestream-config
      asserts-sync:
        type: emptyDir
        advancedMounts:
          authelia:
            assets-sync:
              - path: /data/git
            assets-copy:
              - path: /data/git
                readOnly: true
      assets:
        type: emptyDir
        advancedMounts:
          authelia:
            app:
              - path: /assets
                readOnly: true
            assets-copy:
              - path: /assets
      data:
        existingClaim: authelia-data
        advancedMounts:
          authelia:
            app:
              - path: /data
            litestream:
              - path: /data
            litestream-restore-database:
              - path: /data
      secrets:
        type: secret
        name: authelia-file-secret
        advancedMounts:
          authelia:
            app:
              - path: /secrets
                readOnly: true
