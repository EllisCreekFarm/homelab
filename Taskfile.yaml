---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

set: [pipefail]
shopt: [globstar]

vars:
  CLUSTER_DIR: '{{.ROOT_DIR}}/kubernetes'
  BOOTSTRAP_DIR: '{{.CLUSTER_DIR}}/bootstrap'
  SCRIPTS_DIR: '{{.ROOT_DIR}}/scripts'
  MAKEJINJA_SETTINGS: '{{.ROOT_DIR}}/makejinja.toml'
  CLUSTER_GIT_REPO_URL: "https://github.com/elliscreekfarm/homelab"
  CLUSTER_GIT_REPO_BRANCH:
    sh: "git rev-parse --abbrev-ref HEAD"
  VAULT:
    sh: "echo '{{ .CLUSTER_GIT_REPO_BRANCH }}' | awk -F: '{if ($1 == \"master\") { print \"kubernetes - production\" } else { print \"kubernetes - develop\" }}'"

env:
  MAKEJINJA_SETTINGS: '{{.MAKEJINJA_SETTINGS}}'
  PYTHONDONTWRITEBYTECODE: '1'
  CLUSTER_GIT_REPO_URL: "{{.CLUSTER_GIT_REPO_URL}}"
  CLUSTER_GIT_REPO_BRANCH: "{{.CLUSTER_GIT_REPO_BRANCH}}"
  VAULT: "{{.VAULT}}"

includes:
  common: .taskfiles/common
  bootstrap: .taskfiles/bootstrap
  kubernetes: .taskfiles/kubernetes
  talos: .taskfiles/talos
  user:
    taskfile: .taskfiles/User
    optional: true

tasks:

  default: task --list

  k9s:
    desc: K9s is a CLI to view and manage your Kubernetes clusters
    silent: true
    cmds:
      - defer: rm -rf '{{.TEMP_DIR}}'
      - task: common:kubectl_init
        vars:
          TEMP_DIR: '{{.TEMP_DIR}}'
      - KUBECONFIG='{{.TEMP_DIR}}/kubeconfig' k9s {{.CLI_ARGS}}
    vars:
      TEMP_DIR:
        sh: mktemp -d
    interactive: true

  kubectl:
    desc: kubectl controls the Kubernetes cluster manager
    silent: true
    cmds:
      - defer: rm -rf '{{.TEMP_DIR}}'
      - task: common:kubectl_init
        vars:
          TEMP_DIR: '{{.TEMP_DIR}}'
      - KUBECONFIG='{{.TEMP_DIR}}/kubeconfig' kubectl {{.CLI_ARGS}}
    vars:
      TEMP_DIR:
        sh: mktemp -d

  talosctl:
    desc: out-of-band management of Kubernetes nodes created by Talos
    silent: true
    cmds:
      - defer: rm -rf '{{.TEMP_DIR}}'
      - task: common:talosctl_init
        vars:
          TEMP_DIR: '{{.TEMP_DIR}}'
      - TALOSCONFIG='{{.TEMP_DIR}}/talosconfig' talosctl {{.CLI_ARGS}}
    vars:
      TEMP_DIR:
        sh: mktemp -d

  flux-local:
    desc: Command line utility for inspecting a local flux repository
    silent: true
    cmds:
      - flux-local {{.CLI_ARGS}}

  flux:
    desc: Command line utility for assembling Kubernetes CD pipelines the GitOps way
    silent: true
    cmds:
      - defer: rm -rf '{{.TEMP_DIR}}'
      - task: common:kubectl_init
        vars:
          TEMP_DIR: '{{.TEMP_DIR}}'
      - KUBECONFIG='{{.TEMP_DIR}}/kubeconfig' flux {{.CLI_ARGS}}
    vars:
      TEMP_DIR:
        sh: mktemp -d

  shell:
    desc: Starts a shell that can be used to interact with the Kubernetes cluster
    interactive: true
    silent: true
    cmds:
      - defer: rm -rf '{{.TEMP_DIR}}'
      - task: common:kubectl_init
        vars:
          TEMP_DIR: '{{.TEMP_DIR}}'
      - task: shell_internal
        vars:
          TEMP_DIR: '{{.TEMP_DIR}}'
    vars:
      TEMP_DIR:
        sh: mktemp -d

  shell_internal:
    internal: true
    interactive: true
    silent: true
    env:
      CLUSTER_CONFIG_DIR: '{{.TEMP_DIR}}'
      KUBECONFIG: '{{.TEMP_DIR}}/kubeconfig'
      TALOSCONFIG: '{{.TEMP_DIR}}/talosconfig'
    dotenv:
      - '{{.TEMP_DIR}}/.talos_secrets'
    cmd: '{{.SHELL}} {{.CLI_ARGS}}'
    requires:
      vars:
        - TEMP_DIR
